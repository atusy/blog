<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Atusy&#39;s blog</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Atusy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 02 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ggplot2とpatchworkで周辺分布</title>
      <link>/2018/11/02/marginal-patchwork/</link>
      <pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/02/marginal-patchwork/</guid>
      <description>patchworkパッケージを使えばあんな図やこんな図が簡単に，と思い馳せた人も多いのではなかろうか． 中でも周辺分布を自由に綺麗に，と思った</description>
    </item>
    
    <item>
      <title>RmarkdwonのYAMLフロントマターで  
titleとか  
authorとか  
改行する
</title>
      <link>/2018/10/27/linbreaks-in-yaml-front-matter-of-rmd/</link>
      <pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/27/linbreaks-in-yaml-front-matter-of-rmd/</guid>
      <description>@niszet0 さん著「R MarkdownでWord文書を作ろう」を読んでます。 Rmdを扱った商業誌にも、同書ほどRmdファイルのYAMLフロントマターの</description>
    </item>
    
    <item>
      <title>Plotlyで軸比を1:1に固定する</title>
      <link>/2018/10/26/plotly-fixed-axes/</link>
      <pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/26/plotly-fixed-axes/</guid>
      <description>今迄Plotly.jsを使いたい時は、元の図を ggplot2 パッケージで作成し、 plotly::ggplotly() で変換していた。 しかし、どうもパフォーマンスが悪い気がするので、Plo</description>
    </item>
    
    <item>
      <title>R Markdown で PlantUML</title>
      <link>/2018/10/25/plantuml-on-rmd/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/25/plantuml-on-rmd/</guid>
      <description>@niszet0 さんの “R MarkdownでWord文書を作ろう” を摘み食いしてます (以下RmdでWord本)． ちゃんとしたいずれレビューはいずれするとし</description>
    </item>
    
    <item>
      <title>TokyoR 73 行ってきました</title>
      <link>/2018/10/21/tokyor73/</link>
      <pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/21/tokyor73/</guid>
      <description>2018年10月20日はJuliaなんちゃらやらなんやらと沢山の勉強会が同時開催された日だったらしいですね。 私はTokyoR 73を選んで「g</description>
    </item>
    
    <item>
      <title>roxygen2タグまとめ</title>
      <link>/2018/08/28/roxygen2matome/</link>
      <pubDate>Tue, 28 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/28/roxygen2matome/</guid>
      <description>Roxygen2のタグについての情報が複数箇所に分散していて調べるのが大変なのでまとめた。 超訳 + 超要約 しているので、おかしなところがあれば Issues</description>
    </item>
    
    <item>
      <title>Rmdでchunkごとの実行時間を計測</title>
      <link>/2018/08/18/time-each-chunk/</link>
      <pubDate>Sat, 18 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/18/time-each-chunk/</guid>
      <description>Jupyter Notebookでは、コードブロック冒頭で %%timeit と唱えると、ブロックの評価に要した時間を表示できる。 https://jakevdp.github.io/PythonDataScienceHandbook/01.07-timing-and-profiling.html これをRmdでもできないかなー？ と思って</description>
    </item>
    
    <item>
      <title>パラメータ付きRmdを試す</title>
      <link>/2018/08/17/rmd-parameterized/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/17/rmd-parameterized/</guid>
      <description>パラメータ付きRmdが便利そうだと思ったのでメモと実験 パラメータ付きRmdとは YAMLヘッダーの params で作成される変数のリストを用いたRmd うま</description>
    </item>
    
    <item>
      <title>R3.5系ではファイル同期ソフトでパッケージを同期しないように</title>
      <link>/2018/07/31/dont-sync-pkg-r3-5/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/31/dont-sync-pkg-r3-5/</guid>
      <description>タイトル通り、R3.5系ではファイル同期ソフトでパッケージを同期しないようにしましょう。 同期しておくとある環境にインストールしたパッケージを</description>
    </item>
    
    <item>
      <title>R3.5系ではファイル同期ソフトでパッケージを同期しないように</title>
      <link>/2018/07/31/dont-sync-pkg-r3-5/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/31/dont-sync-pkg-r3-5/</guid>
      <description>タイトル通り、R3.5系ではファイル同期ソフトでパッケージを同期しないようにしましょう。 同期しておくとある環境にインストールしたパッケージを</description>
    </item>
    
    <item>
      <title>blogdownでMathJax</title>
      <link>/2018/07/28/how2mathjax/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/28/how2mathjax/</guid>
      <description>MathJaxとは？ MathJaxを利用すると、$\TeX$ 記法を用いて数式を表現できる。 ブロックにするには $$\latex$$ と入力すると $$ \LaTeX $$ となる。 イン</description>
    </item>
    
    <item>
      <title>GitHub pages with Rmarkdown</title>
      <link>/2018/07/05/github-pages-with-rmarkdown/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/05/github-pages-with-rmarkdown/</guid>
      <description>遅蒔きながら、Rのblogdownパッケージを使ってblogを始めてみた。 “Rとblogdownでかんたんにgithub.io上にブログを使</description>
    </item>
    
  </channel>
</rss>