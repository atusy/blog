<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ggplot2 on Atusy&#39;s blog</title>
    <link>/tags/ggplot2/</link>
    <description>Recent content in Ggplot2 on Atusy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 20 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ggplot で scale = free な facet の軸を調整する</title>
      <link>/2019/01/20/control-axes-in-faceted-plots/</link>
      <pubDate>Sun, 20 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/20/control-axes-in-faceted-plots/</guid>
      <description>はじめに facet の基本的な例 パッケージのロード scales 引数を変えた時の様子を比較 全 facet 共通で xmin = ymin = 0 にしてみる 任意の facet で軸の範囲をコントロールする． Enjoy! 前</description>
    </item>
    
    <item>
      <title>ggplot の facet ごとに共通なプロットを盛り込む</title>
      <link>/2019/01/20/share-data-in-facets/</link>
      <pubDate>Sun, 20 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/20/share-data-in-facets/</guid>
      <description>はじめに facet で表示されない部分のデータをグレーでプロットしてみる versicolor と virginica だけで facet してそれぞれの facet に setosa を表示する Enjoy! はじめに facet を使うと以下のようにグ</description>
    </item>
    
    <item>
      <title>furrr パッケージで ggplot のリストの表示を高速化する</title>
      <link>/2018/12/05/accelerate-list-of-ggplot-with-furrr/</link>
      <pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/12/05/accelerate-list-of-ggplot-with-furrr/</guid>
      <description>はじめに 実装とテスト ベンチマーク 感想 はじめに 前に hoxo-m/pforeach パッケージを利用して， ggplot のリストを並列処理し，描写の高速化を行いました． しかし， hoxo-m/pforeach パッケー</description>
    </item>
    
    <item>
      <title>`ggplot2::coord_cartesian(xlim = c(0, NA))` できるようにしてみた</title>
      <link>/2018/11/22/strange-coord-functions-ggplot2/</link>
      <pubDate>Thu, 22 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/22/strange-coord-functions-ggplot2/</guid>
      <description>問題 実装 オリジナル 修正版 実験 他のcoord_系列も問題なさそう 感想 PRに向けての試験的な実装． https://github.com/atusy/ggplot2/commit/26c1b7a478585889947d265d691e375e399637c3 なぜかxlimやylimに長さ3以上の連続値</description>
    </item>
    
    <item>
      <title>ヒストグラムのビンの色をx軸に応じて変える</title>
      <link>/2018/11/20/histogram-fill-along-x/</link>
      <pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/20/histogram-fill-along-x/</guid>
      <description>ヒストグラムをヒートマップの凡例 + αにしたい 試行錯誤の歴史 データ整形 ヒストグラム fill = x ではダメ fill = stat(x) ならOK ソース 追記 tl; dr geom_histogram(aes(fill = stat(x))) すればいい。</description>
    </item>
    
    <item>
      <title>ggplot2のレジェンド位置を調整</title>
      <link>/2018/11/10/ggplot2-legend-pos-n-just/</link>
      <pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/10/ggplot2-legend-pos-n-just/</guid>
      <description>ggplot2のレジェンド位置を変えるには Let’s try! パッケージ 基本となる図を用意 レジェンド位置を数値で指定する レジェンド位置を文字列で指定</description>
    </item>
    
    <item>
      <title>geom_histogramのビン幅を動的に決定する</title>
      <link>/2018/11/09/binwdith-for-geom-histogram/</link>
      <pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/09/binwdith-for-geom-histogram/</guid>
      <description>TL; DR ggplot2のヒストグラムはビン数30が既定 ビン幅を動的に決めたい geom_histogram(binwidth = ) に関数を指定 ビン幅を決める関数を定義 テスト Enjoy! TL; DR geom_histogram(binwidth = ) はデータ</description>
    </item>
    
    <item>
      <title>ggplot2で$TeX$を利用する</title>
      <link>/2018/11/03/tex-in-ggplot2/</link>
      <pubDate>Sat, 03 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/03/tex-in-ggplot2/</guid>
      <description>はじめに インストール 使ってみる タイトルなどで \(TeX\) geom_text で \(TeX\) facet_wrap や facet_grid で \(TeX\) Enjoy! はじめに ggplot2 で \(TeX\) 記法が使えると嬉しいですよね． 一応，そういう人たちのための入口</description>
    </item>
    
    <item>
      <title>patchworkの表示を高速化したかった……</title>
      <link>/2018/11/03/accelarate-patchwork/</link>
      <pubDate>Sat, 03 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/03/accelarate-patchwork/</guid>
      <description>失敗の記録． 目的 ggplotのリストの表示を高速化するで紹介した通り， ggplotオブジェクトはprintされる段になって，プロットに必要な</description>
    </item>
    
    <item>
      <title>ggplot2とpatchworkで周辺分布</title>
      <link>/2018/11/02/marginal-patchwork/</link>
      <pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/02/marginal-patchwork/</guid>
      <description>patchworkパッケージを使えばあんな図やこんな図が簡単に，と思い馳せた人も多いのではなかろうか． 参考: TokyoR 73での発表スライド 中でも周辺</description>
    </item>
    
    <item>
      <title>ggplotのリストの表示を高速化する</title>
      <link>/2018/10/16/accelerate-list-of-ggplot/</link>
      <pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/16/accelerate-list-of-ggplot/</guid>
      <description>大きなデータを用いたggplotのリストや，大量のggplotのリストを高速に描写するための関数 print_gglist を作りました． devtools::install_github(&amp;#39;atusy/ggAtusy&amp;#39;) で遊べます． はじめに ggp</description>
    </item>
    
    <item>
      <title>欠損値の発生過程の類別</title>
      <link>/2018/08/25/missing-value-type/</link>
      <pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/25/missing-value-type/</guid>
      <description>先日、欠損値の発生過程の例を図示してTweetしたところ、思ったより反響がよかったので、図をブラシュアップの上、記事に残すことにした。 俄仕込</description>
    </item>
    
  </channel>
</rss>