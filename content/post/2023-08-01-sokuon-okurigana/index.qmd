---
title: 日本語の「っ」から始まる送り仮名に関して
date: "2023-08-01"
format: hugo-md
---

```{r, include = FALSE}
knitr::opts_chunk$set(cache = TRUE)
```

# 始めに

SKKという日本語入力システムがある。
元々はEmacsというエディタ向けに開発されたものだが、現在では各種OSのIMEや他のエディタの日本語入力システムとしても活用されている。

SKKの特徴は、ユーザーがどこまでが漢字でどこからが送り仮名かを明示しながら変換する仕組みだ。
文節の分析がないため、軽量に実装できるだけでなく、うまく変換できないケースのほとんどが己れの日本語力の不足であり、システム側に比べ改善しやすいというメリットがある。

これにローマ字を拡張したAZIKという記法を組み合わせると、非常に軽快に日本語入力できるので、私はいたく気に入っている。

最近使っているNeovimでは、[skkeleton](https://github.com/vim-skk/skkeleton)というSKK日本語入力システムが利用でき、愛用している。

しかし、送り仮名の始まりが「っ」となるパターンにおいて、やや使い勝手の悪さを感じているので[Issue](https://github.com/vim-skk/skkeleton/issues/138)を起票した。

JIS配列のキーボードであれば、`:`が「っ」として入力される。
SKKではShiftキーを使うと送り仮名の開始を指定できるので`;`が送り仮名としての「っ」の開始とするのが妥当だ。

しかし設定を工夫しても「った」などと促音にもう一字入力するまでは変換を実用的に利用できない問題がある。

SKK日本語入力FEPやfcitx-skkなど、他のSKK実装では「っ」で変換を開始できていたので、skkeletonでも同様にして欲しいというのが要望だ。

ところでSKKが漢字部分と送り仮名部分を受け取ったときに辞書を参照するわけだが、ここで「っ」の次に何がくるか分からないと、辞書のどの語にマッチすればいいか分からないという問題がある。

fcitx-skkでは「っ」の後はた行が続くと仮定を置いていそうだが、その妥当性を確認するため、[livedoor ニュースコーパス](https://www.rondhuit.com/download.html)データセットを軽く分析してみることにした。

# 結論

送り仮名が「っ」で始まるものの90％以上は更にた行が続くと見て問題ない。
例外はあるが、それぞれユーザー辞書登録していけば間に合いそう。

# 分析

## データセットの準備

### ダウンロード

```{bash}
if [[ ! -d asset/dataset/text ]]; then
  mkdir -p asset/dataset
  curl -L https://www.rondhuit.com/download/ldcc-20140209.tar.gz | tar -xz -C asset/dataset
fi
```

### 絞り込み

漢字の後に「っ」と平仮名が続くパターンを絞り込んだテキストを`asset/input.txt`として用意

```{bash}
rg -oI "\p{Han}っ\p{Hiragana}" asset/dataset/text > asset/input.txt
```

### データの整形と集計

漢字の後に「っ」と平仮名が続く文字列に対し、平仮名があ行、か行...とどれにあたるかでグループ分けしたデータフレームを用意

- `group`列: 何行であるかを示す文字列
- `data`列: グループごとのデータ
- `data_unique`列: 各グループにおけるuniqueな値のデータ
- `count_occurrence`列: 各グループの出現回数
- `count_unique`列: 各グループにおけるuniqueな値の個数

```{r df}
data <- readr::read_lines("asset/input.txt")

patterns <- c(
  あ行 = "[あいうえお]$",
  か行 = "[かきくけこ]$",
  が行 = "[がぎぐげご]$",
  さ行 = "[さしすせそ]$",
  ざ行 = "[ざじずぜぞ]$",
  た行 = "[たちつてと]$",
  だ行 = "[だぢづでど]$",
  は行 = "[はひふへほ]$",
  ば行 = "[ばびぶべぼ]$",
  ぱ行 = "[ぱぴぷぺぽ]$",
  ま行 = "[まみむめも]$",
  や行 = "[やゆよ]$",
  ら行 = "[らりるれろ]$",
  わ行 = "[わをん]$"
)

df <- tibble::tibble(
  group = names(patterns),
  data = patterns |> lapply(function(pat) data[grepl(pat, data)])
) |>
  dplyr::mutate(
    data_unique = lapply(data, unique),
    count_occurrence = lengths(data),
    count_unique = lengths(data_unique)
  )

df
```

た行が圧倒的に多く、ぱ行、か行、さ行が続くことがわかる

「立って」、「戦った」、「反った」など、促音にた行が続くパターンは多いと想像がつくことと矛盾しない

### 漢字に促音＋た行以外が続くパターンについて

もう少し見てみよう。
まずはデータを一覧しやすいようにしておく。

```{r uniq}
vec <- df |> dplyr::select(group, data_unique) |> tibble::deframe() |> lapply(sort)
```

#### さ行

いずれも「っす」で終わるパターン

```{r sagyo}
vec["さ行"]
```

データセットを見直すと以下のように、送り仮名以外のものであると分かる

- 人っすよ
- 『雨っす』
- 短足っすなぁ

#### か行

送り仮名なパターンもあれば、そうじゃないものもある

```{r kagyo}
vec["か行"]
```

- 送り仮名なパターン
  - 動詞
    - 乗っかる
    - 乗っける
  - 名詞を形容詞化するパターン
    - 丸っこ
    - 脂っこ
- 漢字単体で意味を成すものに「っこ」が続くパターン
  - 甥っこ
  - 隅っこ

など

#### ぱ行

名詞に「ぽい」や「ぽく」が続くパターンが多そう

```{r ぱ行}
vec["ぱ行"]
```

- 送り仮名なパターン
  - 酔っぱらい
  - 薄っぺら
  - 引っぱり
  - 色っぽい
  - 艶っぽい
  - 葉っぱ
- その他
  - 崖っぷち
  - 悪童っぷり
